<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Git常用命令</title>
    <link href="/2023/08/18/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2023/08/18/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p class="note note-info">Last updated on Augst 18, 2023</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在学习Git之前，我们需要先理解以下几个概念：</p><blockquote><p>什么是Git？</p></blockquote><p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</p><blockquote><p>什么是版本控制系统？</p></blockquote><p>版本控制系统是一种帮助软件开发者实现团队合作和历史版本维护的软件，一个版本控制系统应具备以下列出的这几个基本功能：</p><ul><li>允许开发者并发工作</li><li>不允许一个开发者覆写另一个开发者的修改</li><li>保存所有版本历史</li></ul><blockquote><p>版本控制系统分为几类？</p></blockquote><p>版本控制系统可以分为：集中式版本控制系统、去中心式（<strong>分布式</strong>）版本控制系统。</p><blockquote><p>什么是集中式版本控制系统？</p></blockquote><p>集中式的版本控制系统，所有的版本库是放在中央服务器中的，简单说就是我们每一次的修改提交都是保存在中央服务器中的。中央服务器就是个大仓库，大家把产品都堆里面，每一次需要修改的时候，需要去仓库里面把文件给提出来，然后再操作。这就可能导致协同工作时提交文件不完整，版本库损坏等问题。</p><blockquote><p>什么是分布式版本控制系统？</p></blockquote><p>分布式版本控制系统，每台计算机上都有一个完整的版本库。你的修改仅仅需要提交给本地的版本库进行保存就可以了。那它怎么能做到协同呢？不同于集中式版本控制系统的”中央服务器”，分布式版本控制系统可以通过推送版本库，实现不同的计算机之间的版本共享。举个例子，对于同一个文件，如果两个人同时对它进行了修改，最新的版本应该都保存在各自的计算机中，想要实现协同开发，只需要将各自的最新版本库推送给对方，就可以得到最新的版本库了。</p><h2 id="Git的使用"><a href="#Git的使用" class="headerlink" title="Git的使用"></a>Git的使用</h2><blockquote><p>Git中的常用概念</p></blockquote><ul><li><p>版本库：.git隐藏文件夹就是版本库其中存储了很多配置信息，日志信息，文件版本信息等。</p></li><li><p>工作区：包含.git文件夹的目录就是工作区（工作目录），主要用于存放开放的代码。</p></li><li><p>暂存区：.git文件夹中的index文件就是暂存区(也可以叫做stage)，一个临时保存修改文件的地方。</p></li></ul><h3 id="1-获取Git仓库"><a href="#1-获取Git仓库" class="headerlink" title="1.获取Git仓库"></a>1.获取Git仓库</h3><h4 id="（1）在本地初始化Git仓库"><a href="#（1）在本地初始化Git仓库" class="headerlink" title="（1）在本地初始化Git仓库"></a>（1）在本地初始化Git仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">在任意目录下创建一个空目录作为本地Git仓库<br><br>进入这个目录，点击右键打开Git bash窗口<br><br>执行命令 git init<br></code></pre></td></tr></table></figure><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181655103.png"></p><p>执行git init命令后再去刚才的目录下查看是否生成了.git文件夹（隐藏文件夹）</p><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181657367.png"></p><h4 id="（2）从远程仓库克隆"><a href="#（2）从远程仓库克隆" class="headerlink" title="（2）从远程仓库克隆"></a>（2）从远程仓库克隆</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">首先在Github或者Gitee上创建一个仓库<br><br>在一个目录下执行命令 git <span class="hljs-built_in">clone</span> [远程Git仓库地址]<br></code></pre></td></tr></table></figure><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181729102.png"></p><h3 id="2-本地仓库常用命令"><a href="#2-本地仓库常用命令" class="headerlink" title="2.本地仓库常用命令"></a>2.本地仓库常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git status     ---查看文件状态<br></code></pre></td></tr></table></figure><p>首先进入刚刚克隆下来的目录，再执行git status。可以看到现在在main分支，由于是新仓库所以还没有提交信息。</p><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181731864.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add [* 或者 文件名]     ---将文件的修改加入暂存区<br></code></pre></td></tr></table></figure><p>在仓库中手动创建一个a.txt文件，然后执行git add命令，再查看状态。</p><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181735833.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit -m <span class="hljs-string">&quot;提示信息&quot;</span> [文件名]     ---将暂存区的文件修改提交到版本库<br></code></pre></td></tr></table></figure><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181737332.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">log</span>     ---查看日志<br></code></pre></td></tr></table></figure><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181738272.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git reset --hard [版本号]     ---将暂存区的文件取消暂存或者切换到指定版本<br></code></pre></td></tr></table></figure><h3 id="3-远程仓库常用命令"><a href="#3-远程仓库常用命令" class="headerlink" title="3.远程仓库常用命令"></a>3.远程仓库常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote -v     ---查看远程仓库<br></code></pre></td></tr></table></figure><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181749521.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote add [short-name] &lt;url&gt;     ---添加远程仓库<br></code></pre></td></tr></table></figure><p>首先在本地创建一个文件夹执行git init命令，然后在Github或者Gitee上创建一个同名的仓库，再执行上面添加远程仓库的命令。</p><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181757432.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> &lt;url&gt;     ---从远程仓库克隆<br></code></pre></td></tr></table></figure><p>克隆命令之前已经展示过，不再演示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git pull [short-name] [branch-name]     ---从远程仓库拉取<br></code></pre></td></tr></table></figure><p class="note note-warning">如果当前本地仓库不是从远程克隆，而是本地创建的仓库，并且仓库中存在文件，此时再从远程仓库拉取文件会报错(fatal: refusing to merge unrelated histories)，解决此问题可以在git pull 命令后加入参数--allow-unrelated-histories。</p><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181807404.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push [remote-name] [branch-name]     ---推送到远程仓库<br></code></pre></td></tr></table></figure><p>回到之前从远程克隆的Test仓库，我们之前在Test目录下创建了一个a.txt文件，现在将其推送到远程仓库。</p><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181803475.png"></p><p>再去远程仓库查看是否推送成功</p><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181804033.png"></p><h3 id="4-分支操作"><a href="#4-分支操作" class="headerlink" title="4.分支操作"></a>4.分支操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">git branch     ---列出所有本地分支<br><br>git branch -r      ---列出所有远程分支<br><br>git branch -a     ---列出所有本地和远程分支<br></code></pre></td></tr></table></figure><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181853694.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git branch [name]     ---创建分支<br></code></pre></td></tr></table></figure><p>创建b1分支</p><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181856090.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git checkout [name]     ---切换分支<br></code></pre></td></tr></table></figure><p>切换到b1分支</p><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181856193.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push [short-name] [name]     ---推送至远程仓库分支<br></code></pre></td></tr></table></figure><p>推送到b1分支</p><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181859250.png"></p><p>在远程仓库的b1分支下也出现了a.txt文件</p><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181901899.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git merge [name]     ---合并分支<br></code></pre></td></tr></table></figure><p>先在本地仓库创建一个test.txt文件，然后推送到远程仓库的b1分支</p><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181912934.png"></p><p>执行上面的合并分支命令即可将b1分支的内容合并到main分支</p><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181914555.png"></p><h3 id="5-标签操作"><a href="#5-标签操作" class="headerlink" title="5.标签操作"></a>5.标签操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git tag [name]     ---创建标签<br><br>git tag     ---列出已有标签<br></code></pre></td></tr></table></figure><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181918171.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push [short-name] [name]     ---将标签推送至远程仓库<br></code></pre></td></tr></table></figure><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181921225.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git checkout -b [branch] [name]     ---检出标签<br></code></pre></td></tr></table></figure><p><img src="https://holary-blog-images-1320152118.cos.ap-chengdu.myqcloud.com/blog-images/202308181923497.png"></p>]]></content>
    
    
    <categories>
      
      <category>常用命令</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
